/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jdbc.library;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author Tumi
 */
public class AddBook extends javax.swing.JFrame {
    
    private List<Author> newAuthorsResults;
    TableModel tableModel;
    MouseEventModel mouseEvent;
    AuthorsQueries authorsQuery;
    ResultSetTableModel resultSetTableModel;
    
    //column names in the table of current book's authors. 
    String []columnNames = {"Number","First Name", "Last Name"};
    String query = "SELECT LastName, FirstName FROM Authors ORDER BY LastName,FirstName";
    
    //rows of objects for the table of current book's authors i.e author's names
    Object[][] data;
    
    private String DATABASE_URL = "jdbc:mysql://localhost/books";
    private String USERNAME = "deitel";
    private String PASSWORD = "deitel";

    /**
     * Creates new form AddBook
     */
    public AddBook() {
        initComponents();
        initialiseCopyright();
        newAuthorsResults = new ArrayList<>();
        data = new Object[newAuthorsResults.size()][3];
        tableModel = new TableModel(columnNames,data);
        mouseEvent = new MouseEventModel();
        authorsQuery = new AuthorsQueries();
        tbNewAuthors.setModel(tableModel);
        tbNewAuthors.addMouseListener(mouseEvent);
        
        try{
            resultSetTableModel = new ResultSetTableModel(
                DATABASE_URL,USERNAME, PASSWORD);
            resultSetTableModel.setQuery(query);
           tbOldAuthors.setModel(resultSetTableModel);
           tbOldAuthors.addMouseListener(mouseEvent);
        }catch(SQLException sqlException){
            JOptionPane.showMessageDialog(this,sqlException.getMessage()
                    ,"Error!", JOptionPane.ERROR_MESSAGE);
            resultSetTableModel.disconnectFromDatabase();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        btAdd = new javax.swing.JButton();
        txtIsbn = new javax.swing.JTextField();
        txtTitle = new javax.swing.JTextField();
        txtEditionNumber = new javax.swing.JTextField();
        cbCopyright = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbNewAuthors = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbOldAuthors = new javax.swing.JTable();
        btSubmit = new javax.swing.JButton();
        btSearch = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add a book page");

        jLabel1.setText("ISBN:");

        jLabel3.setText("Title:");

        jLabel5.setText("Edition number:");

        jLabel6.setText("Copyright:");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(255, 204, 204), new java.awt.Color(51, 51, 0), new java.awt.Color(0, 204, 51)));

        jLabel2.setText("First name:");

        jLabel4.setText("Last name:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Author(s)");

        btAdd.setMnemonic('A');
        btAdd.setText("Add");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAdd))
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(102, 102, 102))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAdd)
                        .addGap(2, 2, 2)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(23, 23, 23))
        );

        cbCopyright.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tbNewAuthors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbNewAuthors);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Authors for this book");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Complete a form below to add a book:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Authors from the database");

        tbOldAuthors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbOldAuthors);

        btSubmit.setMnemonic('S');
        btSubmit.setText("Submit");
        btSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSubmitActionPerformed(evt);
            }
        });

        btSearch.setMnemonic('E');
        btSearch.setText("Search");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        btCancel.setMnemonic('C');
        btCancel.setText("Cancel");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtIsbn)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(126, 126, 126))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(txtTitle))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6)
                            .addComponent(btSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbCopyright, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEditionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btCancel)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGap(21, 21, 21))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addGap(65, 65, 65)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(88, 88, 88))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(txtIsbn, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEditionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbCopyright, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSubmit)
                    .addComponent(btSearch)
                    .addComponent(btCancel))
                .addGap(0, 11, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
       String fName = txtFirstName.getText();
       String lName = txtLastName.getText();
       
       //validate the user inputs
        if(fName.length() == 0 || lName.length() == 0){
            JOptionPane.showMessageDialog(this,"Complete name fields!"
                        ,"Warning!", JOptionPane.WARNING_MESSAGE);
        }else{
            //add author in the list
           addAuthor(fName, lName);
           //add aothor in the table
           viewAuthorInATable();
        }
    }//GEN-LAST:event_btAddActionPerformed

    private void btSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSubmitActionPerformed
        List<String> authorsFirstNames = new ArrayList<>();
        List<String> authorsLastNames = new ArrayList<>();
        int resultISBN, resultTitles, copyright, editionNumber;
        
        if(validateEntries()){
            
            boolean pimaryKeyExit = authorsQuery.primaryKeyISBN(txtIsbn.getText());
            if(!pimaryKeyExit){
                editionNumber = Integer.parseInt(txtEditionNumber.getText());
                copyright = Integer.parseInt(cbCopyright.getSelectedItem().toString());

                if(newAuthorsResults.isEmpty()){
                    btAddActionPerformed(evt);
                }

                for(int i = 0; i < newAuthorsResults.size(); i++){
                    authorsFirstNames.add(newAuthorsResults.get(i).getFname());
                    authorsLastNames.add(newAuthorsResults.get(i).getLname());
                }

                int resultAuthor =  authorsQuery.insertAuthors(authorsFirstNames,
                        authorsLastNames);
                resultISBN =   authorsQuery.insertIntoAurthorISBN(
                        txtIsbn.getText() ,authorsFirstNames, authorsLastNames);
                resultTitles = authorsQuery.insertIntoTitles(
                            txtIsbn.getText(),txtTitle.getText(),
                            editionNumber, copyright);

                JOptionPane.showMessageDialog(this, resultAuthor + " row(s) updated "
                        + " in the Authors Table.\n\n" + resultISBN + " row(s) "
                        + "updated in the AuthorISBN"
                        + " Table.\n\n" + resultTitles + " row updated in the Titles "
                        + "Table.","Add authors",JOptionPane.PLAIN_MESSAGE);
            }else{
                    JOptionPane.showMessageDialog(this,"Error: Violation of primary"
                            + " key ISBN.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btSubmitActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        
        String name = JOptionPane.showInputDialog(this,"Enter author's last "
                + "name or first name:");
        String query1 = "SELECT LastName, FirstName FROM Authors WHERE "
                + "LastName LIKE '%" + name + "%' OR FirstName LIKE '%"+ name +
                "%'  ORDER BY LastName,FirstName";
        try{
            resultSetTableModel.setQuery(query1);
           tbOldAuthors.setModel(resultSetTableModel);
        }catch(SQLException sqlException){
            JOptionPane.showMessageDialog(this,sqlException.getMessage()
                    ,"Error!", JOptionPane.ERROR_MESSAGE);
            resultSetTableModel.disconnectFromDatabase();
        } 
    }//GEN-LAST:event_btSearchActionPerformed

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        this.dispose();
        new HomePage(HomePage.userLevel).setVisible(true);
    }//GEN-LAST:event_btCancelActionPerformed
  public void initialiseCopyright(){
        Calendar date = Calendar.getInstance();
        int currentYear = date.get(Calendar.YEAR) - 1900;
        List<String> copyright1 = new ArrayList<>();
        copyright1.add("Select year");
        for(int i = 0 ; i <= currentYear; i++){
            copyright1.add(String.valueOf(1900 + currentYear - i));
        }
        cbCopyright.setModel(new DefaultComboBoxModel(copyright1.toArray()));
    }
                                      
    //add author in the list of authors
    public void addAuthor(String fName, String lName){
                    
        boolean exit = false;//false means author is not in the list

        //prevent doublicate in the list of authors
        if(newAuthorsResults.size()>0){
            for(int i = 0; i<newAuthorsResults.size(); i++){
                if (newAuthorsResults.get(i).getFname().equals(fName) && 
                        newAuthorsResults.get(i).getLname().equals(lName)){
                    exit = true;
                    break;
                }
            }
        }
        
        if(!exit){
            //add new author in the list
            newAuthorsResults.add(new Author(fName,lName)); 
            //add data in the table model
            updatetable();
            //clear text fields
            txtFirstName.setText("");
            txtLastName.setText("");
        }else{
            JOptionPane.showMessageDialog(this,"The author is alread added!"
                    ,"Warning!", JOptionPane.WARNING_MESSAGE);
        }
    }
    //view authors in the table
    public void viewAuthorInATable(){
        tableModel = new TableModel(columnNames,data);
        tbNewAuthors.setModel(tableModel);
    }
    
    public void updatetable(){
        data = new Object[newAuthorsResults.size()][3];
            for(int i = 0; i < newAuthorsResults.size(); i++){
                data[i][0] = i+1;
                data[i][1] = newAuthorsResults.get(i).getFname();
                data[i][2] = newAuthorsResults.get(i).getLname();
            }
    }
    
    public boolean validateEntries(){
        
        boolean valid = false;
        
        if(txtIsbn.getText().length() == 0){
            JOptionPane.showMessageDialog(this,"Complete ISBN field!"
                        ,"Warning!", JOptionPane.WARNING_MESSAGE);
        }
        else if(txtTitle.getText().length() == 0){
          JOptionPane.showMessageDialog(this,"Complete Title field!"
                        ,"Warning!", JOptionPane.WARNING_MESSAGE);  
        }
        else if(newAuthorsResults.size() < 1 && (txtFirstName.getText().length()
                == 0 || txtLastName.getText().length() == 0)){
                JOptionPane.showMessageDialog(this,"Please give atleast one "
                        + "author!\n Complete author's name fields!","Warning!", 
                    JOptionPane.WARNING_MESSAGE);
        }
        else if(txtEditionNumber.getText().length() == 0){
            JOptionPane.showMessageDialog(this,"Complete Edition number field!"
                        ,"Warning!", JOptionPane.WARNING_MESSAGE);
        }else if("Select year".equals(cbCopyright.getSelectedItem())){
            JOptionPane.showMessageDialog(this,"Select copyright."
                        ,"Warning!", JOptionPane.WARNING_MESSAGE);
        }
        else{
            valid = true;
        }
        return valid;
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBook().setVisible(true);
            }
        });
    }
    //table model
    public class TableModel  extends AbstractTableModel{
       String []columnNames;
       Object[][] data = new Object[newAuthorsResults.size()][3]; 

        public TableModel(String[] columnNames, Object[][] data) {
            this.columnNames = columnNames;
            this.data = data;
        }

        public int getColumnCount(){
            return columnNames.length;
        }
        
        public int getRowCount(){
            return data.length;
        }
        
        public String getColumnName(int column){
            return columnNames[column];
        }
        public Object getValueAt(int row, int column){
            return data[row][column];
        }
        public Class getColumnClass(int c){
            return getValueAt(0,c).getClass();
        }
    }
    
    //model the event of mouseClicked event
    public class MouseEventModel extends MouseAdapter{
        public void mouseClicked(MouseEvent e){
            if(e.getClickCount() == 2){
                //authors of the current book
                int selectedRow =   tbNewAuthors.getSelectedRow();
                
                //Authors that are alread in the database
                int selectedRowInOldAuthors = tbOldAuthors.getSelectedRow();
                
                //keep track of the clicked table
                if(selectedRow >= 0){
                    String fName = tableModel.getValueAt(selectedRow, 1).toString();
                    String lName = tableModel.getValueAt(selectedRow, 2).toString();
                    int delete = JOptionPane.showConfirmDialog(null,"Delete "
                            +fName + " " + lName + "?","Delete author!", JOptionPane.YES_NO_OPTION);
                    if(delete == JOptionPane.YES_OPTION){
                        for(int i = 0; i<newAuthorsResults.size(); i++){
                            //selecting the user in the list
                            if(newAuthorsResults.get(i).getFname().equals(fName)&&
                                 newAuthorsResults.get(i).getLname().equals(lName)){
                                //delete author
                                newAuthorsResults.remove(i);
                            }
                        }
                    }
                }else{
                    String firstName = resultSetTableModel.getValueAt(
                                       selectedRowInOldAuthors,0).toString();
                    String lastName = resultSetTableModel.getValueAt(
                                      selectedRowInOldAuthors,1).toString();
                    //add selected author in the new aothors table
                    addAuthor(firstName, lastName);
                }
                //update changes in the table
                updatetable();
                viewAuthorInATable();
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btSearch;
    private javax.swing.JButton btSubmit;
    private javax.swing.JComboBox cbCopyright;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbNewAuthors;
    private javax.swing.JTable tbOldAuthors;
    private javax.swing.JTextField txtEditionNumber;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtIsbn;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
